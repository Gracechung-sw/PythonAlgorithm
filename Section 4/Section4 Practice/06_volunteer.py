# 씨름 선수(그리디)
# 현수는 씨름 감독입니다. 현수는 씨름 선수를 선발공고를 냈고, N명의 지원자가 지원을 했습
# 니다. 현수는 각 지원자의 키와 몸무게 정보를 알고 있습니다.
# 현수는 씨름 선수 선발 원칙을 다음과 같이 정했습니다.
# “다른 모든 지원자와 비교하여 키와 몸무게 중 적어도 하나는 다른 지원자보다 키가 크거나
# 몸무게가 많이 나가는 지원자만 뽑기로 했습니다.”
# A 지원자가 다른 모든 지원자와 비교하여 키와 몸무게가 모두 작거나 가벼운 경우가 한 번이
# 라고 있다면 A지원자를 뽑지 않는다는 것입니다.
# ▣ 입력설명
# 첫째 줄에 지원자의 수 N(5<=N<=50)이 주어집니다.
# 두 번째 줄부터 N명의 키와 몸무게 정보가 차례로 주어집니다. 각 선수의 키와 몸무게는 모두
# 다릅니다.
# ▣ 출력설명
# 첫째 줄에 씨름 선수로 뽑히는 최대 인원을 출력하세요.

# 처음 생각한 알고리즘
# 1. 키, 몸무게 각각 오름차순으로 정렬
# 2. 자신의 키 이후에 있는 사람들 번호가
# 2-1. 자신의 몸무게 이후에 있는 사람들 번호 중 하나라도 있으면 탈락
# 2-2. 아니면 합격 cnt++
# 그런데 2-1, 2-2구현이 어렵다.

# 그래서 배운 알고리즘
# 1. 키를 내림차순으로 정렬
# 2. 첫번째 사람은 키가 제일 크니까 몸무게는 비교할 필요도 없음 cnt=1
# 3. 두번째 사람부터는 자신의 이전의 사람들과 몸무게만 비교해서 그들보다 다 작으면 탈락
# 4. 근데 '다 작으면 탈락'이니까 자신 앞까지 for문 돌면서 하나씩 비교할 필요 없이
#   이전에서 가장 몸무게 큰 것을 저장해뒀다가, 그것이랑만 비교하면 된다. .
# 3-2. 한번이라도 크면 합격 cnt++

n = int(input())
info = []
max_weight = 0
cnt = 0

for _ in range(n):
    h, w = map(int, input().split())
    info.append((h, w))
# default가 오름차순이라서 .sort()하면 오름차순 정렬이 되고, .sort(reverse=True)로하면 내림차순 정렬
info.sort(reverse=True)

for h, w in info:
    if max_weight < w:
        max_weight = w
        cnt += 1
        # print("cnt: ", cnt)

print(cnt)
